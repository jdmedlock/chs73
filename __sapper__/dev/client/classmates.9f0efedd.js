import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, M as validate_each_argument, v as validate_slots, e as element, t as text, n as space, c as claim_element, a as children, b as claim_text, f as detach_dev, p as claim_space, j as add_location, h as attr_dev, k as insert_dev, l as append_dev, x as noop, o as svg_element, A as create_component, B as claim_component, q as set_style, C as mount_component, u as listen_dev, D as transition_in, E as transition_out, F as destroy_component, N as destroy_each } from './client.26607776.js';
import { c as classmates } from './classmates.883c4989.js';
import { L as LetterIndex, B as BackToTop, c as createNameIndex } from './LetterIndex.a1d0c2a4.js';
import { c as createPersonGroups } from './createPersonGroups.7c5a2af0.js';

/* src/routes/classmates.svelte generated by Svelte v3.35.0 */
const file = "src/routes/classmates.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i];
	return child_ctx;
}

// (76:8) {#if showGreeting}
function create_if_block(ctx) {
	let div0;
	let p0;
	let t0;
	let t1;
	let ol;
	let li0;
	let t2;
	let t3;
	let p1;
	let t4;
	let t5;
	let p2;
	let t6;
	let t7;
	let li1;
	let t8;
	let t9;
	let p3;
	let t10;
	let t11;
	let p4;
	let t12;
	let t13;
	let p5;
	let t14;
	let t15;
	let p6;
	let t16;
	let t17;
	let div1;
	let p7;
	let t18;
	let t19;
	let li2;
	let t20;
	let t21;
	let p8;
	let t22;
	let t23;
	let p9;
	let em;
	let t24;
	let t25;
	let t26;
	let p10;
	let t27;

	const block = {
		c: function create() {
			div0 = element("div");
			p0 = element("p");
			t0 = text("Last month I attended my 50 year class reunion. Cotton High School. \n              Class of 1946. It was a highlight of my year. I came away with \n              some valuable insights I wish I had learned long ago.");
			t1 = space();
			ol = element("ol");
			li0 = element("li");
			t2 = text("Time is not on our side.");
			t3 = space();
			p1 = element("p");
			t4 = text("Time doesn’t take sides. Time can be an enemy or a friend. It’s what \n              we make it. It is a window of opportunity. We are each given an \n              unknown allotment of time to be optimized or wasted and every second \n              of every day the allotment diminishes. This shouldn’t be depressing, \n              it should be a motivating truth that drives us to cherish and \n              maximize every moment.");
			t5 = space();
			p2 = element("p");
			t6 = text("Several of my classmates were not with us because they had run \n              out of time. All of us who were there knew time had changed us.  \n              We were grateful to use this day to renew friendships and remember \n              the gift of time together we had been given 50 years before.");
			t7 = space();
			li1 = element("li");
			t8 = text("We shouldn’t allow time to erase past relationships.");
			t9 = space();
			p3 = element("p");
			t10 = text("You might ask, “Why should anyone try to keep in touch with \n              classmates from 50 years ago?” Because we were friends. Because \n              every one of our classmates are children of God. Time doesn’t \n              change that.");
			t11 = space();
			p4 = element("p");
			t12 = text("I spent 12 years with my classmates. Getting my diploma was not \n              an excuse for not keeping aware of what is happening in their \n              lives. Every relationship we have is a gift to be cherished and \n              with today’s technology there is no excuse for not staying \n              informed. I’m not suggesting that we have to constantly \n              communicate with everyone we meet, but I regret not staying \n              connected.");
			t13 = space();
			p5 = element("p");
			t14 = text("Had I kept in touch, I could have known of the personal loss some \n              of them suffered. I could have prayed for my friends as they \n              faced challenges and cheered their victories. I can’t do it over \n              but I am committed to keeping track of these wonderful people.");
			t15 = space();
			p6 = element("p");
			t16 = text("I know that the busyness of our own personal lives and careers \n              makes it hard to keep up with old friends. But I came away from \n              this reunion wondering…");
			t17 = space();
			div1 = element("div");
			p7 = element("p");
			t18 = text("“If we are too busy to nourish old relationships, perhaps we are \n                too busy.”");
			t19 = space();
			li2 = element("li");
			t20 = text("Time destroys the artificial social structure \n              of High School. Thank God!");
			t21 = space();
			p8 = element("p");
			t22 = text("High School was filled with intricate strata of cliques;  jocks, \n              geeks, brains, cowboys, farmers, goody two shoes, quiet people, \n              rowdy people, trouble makers, bookworms, the in crowd.");
			t23 = space();
			p9 = element("p");
			em = element("em");
			t24 = text("All of that nonsense dissolves with time.");
			t25 = text(" The people at \n              a 50 year reunion aren’t trying to impress anyone. We reveled in \n              memories of youth and gloried in sharing the blessing and \n              difficulties time has brought our way.");
			t26 = space();
			p10 = element("p");
			t27 = text("I had more fun reconnecting and reminiscing with my old friends \n              than I’ve have had in a long time. I want to thank Linda, Buddy, \n              Gary, Patty, Kent, Curtis, Duane and Richard for taking time to \n              come. You made my 50 year reunion a remarkable, memorable day. \n              You reminded me of the relentless march of time and the importance \n              of relationships. See you next year!");
			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			p0 = claim_element(div0_nodes, "P", {});
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "Last month I attended my 50 year class reunion. Cotton High School. \n              Class of 1946. It was a highlight of my year. I came away with \n              some valuable insights I wish I had learned long ago.");
			p0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			ol = claim_element(nodes, "OL", { class: true });
			var ol_nodes = children(ol);
			li0 = claim_element(ol_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			t2 = claim_text(li0_nodes, "Time is not on our side.");
			li0_nodes.forEach(detach_dev);
			t3 = claim_space(ol_nodes);
			p1 = claim_element(ol_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t4 = claim_text(p1_nodes, "Time doesn’t take sides. Time can be an enemy or a friend. It’s what \n              we make it. It is a window of opportunity. We are each given an \n              unknown allotment of time to be optimized or wasted and every second \n              of every day the allotment diminishes. This shouldn’t be depressing, \n              it should be a motivating truth that drives us to cherish and \n              maximize every moment.");
			p1_nodes.forEach(detach_dev);
			t5 = claim_space(ol_nodes);
			p2 = claim_element(ol_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t6 = claim_text(p2_nodes, "Several of my classmates were not with us because they had run \n              out of time. All of us who were there knew time had changed us.  \n              We were grateful to use this day to renew friendships and remember \n              the gift of time together we had been given 50 years before.");
			p2_nodes.forEach(detach_dev);
			t7 = claim_space(ol_nodes);
			li1 = claim_element(ol_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			t8 = claim_text(li1_nodes, "We shouldn’t allow time to erase past relationships.");
			li1_nodes.forEach(detach_dev);
			t9 = claim_space(ol_nodes);
			p3 = claim_element(ol_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t10 = claim_text(p3_nodes, "You might ask, “Why should anyone try to keep in touch with \n              classmates from 50 years ago?” Because we were friends. Because \n              every one of our classmates are children of God. Time doesn’t \n              change that.");
			p3_nodes.forEach(detach_dev);
			t11 = claim_space(ol_nodes);
			p4 = claim_element(ol_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			t12 = claim_text(p4_nodes, "I spent 12 years with my classmates. Getting my diploma was not \n              an excuse for not keeping aware of what is happening in their \n              lives. Every relationship we have is a gift to be cherished and \n              with today’s technology there is no excuse for not staying \n              informed. I’m not suggesting that we have to constantly \n              communicate with everyone we meet, but I regret not staying \n              connected.");
			p4_nodes.forEach(detach_dev);
			t13 = claim_space(ol_nodes);
			p5 = claim_element(ol_nodes, "P", { class: true });
			var p5_nodes = children(p5);
			t14 = claim_text(p5_nodes, "Had I kept in touch, I could have known of the personal loss some \n              of them suffered. I could have prayed for my friends as they \n              faced challenges and cheered their victories. I can’t do it over \n              but I am committed to keeping track of these wonderful people.");
			p5_nodes.forEach(detach_dev);
			t15 = claim_space(ol_nodes);
			p6 = claim_element(ol_nodes, "P", { class: true });
			var p6_nodes = children(p6);
			t16 = claim_text(p6_nodes, "I know that the busyness of our own personal lives and careers \n              makes it hard to keep up with old friends. But I came away from \n              this reunion wondering…");
			p6_nodes.forEach(detach_dev);
			t17 = claim_space(ol_nodes);
			div1 = claim_element(ol_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p7 = claim_element(div1_nodes, "P", { class: true });
			var p7_nodes = children(p7);
			t18 = claim_text(p7_nodes, "“If we are too busy to nourish old relationships, perhaps we are \n                too busy.”");
			p7_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t19 = claim_space(ol_nodes);
			li2 = claim_element(ol_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			t20 = claim_text(li2_nodes, "Time destroys the artificial social structure \n              of High School. Thank God!");
			li2_nodes.forEach(detach_dev);
			t21 = claim_space(ol_nodes);
			p8 = claim_element(ol_nodes, "P", { class: true });
			var p8_nodes = children(p8);
			t22 = claim_text(p8_nodes, "High School was filled with intricate strata of cliques;  jocks, \n              geeks, brains, cowboys, farmers, goody two shoes, quiet people, \n              rowdy people, trouble makers, bookworms, the in crowd.");
			p8_nodes.forEach(detach_dev);
			t23 = claim_space(ol_nodes);
			p9 = claim_element(ol_nodes, "P", { class: true });
			var p9_nodes = children(p9);
			em = claim_element(p9_nodes, "EM", {});
			var em_nodes = children(em);
			t24 = claim_text(em_nodes, "All of that nonsense dissolves with time.");
			em_nodes.forEach(detach_dev);
			t25 = claim_text(p9_nodes, " The people at \n              a 50 year reunion aren’t trying to impress anyone. We reveled in \n              memories of youth and gloried in sharing the blessing and \n              difficulties time has brought our way.");
			p9_nodes.forEach(detach_dev);
			t26 = claim_space(ol_nodes);
			p10 = claim_element(ol_nodes, "P", { class: true });
			var p10_nodes = children(p10);
			t27 = claim_text(p10_nodes, "I had more fun reconnecting and reminiscing with my old friends \n              than I’ve have had in a long time. I want to thank Linda, Buddy, \n              Gary, Patty, Kent, Curtis, Duane and Richard for taking time to \n              come. You made my 50 year reunion a remarkable, memorable day. \n              You reminded me of the relentless march of time and the importance \n              of relationships. See you next year!");
			p10_nodes.forEach(detach_dev);
			ol_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p0, file, 77, 12, 2718);
			attr_dev(div0, "class", "mt-2");
			add_location(div0, file, 76, 10, 2687);
			attr_dev(li0, "class", "text-xl md:text-2xl font-bold");
			add_location(li0, file, 85, 12, 3039);
			attr_dev(p1, "class", "mt-2 ml-0.5");
			add_location(p1, file, 86, 12, 3123);
			attr_dev(p2, "class", "mt-2 ml-0.5");
			add_location(p2, file, 94, 12, 3621);
			attr_dev(li1, "class", "text-xl md:text-2xl font-bold mt-4");
			add_location(li1, file, 101, 12, 3990);
			attr_dev(p3, "class", "mt-2 ml-0.5");
			add_location(p3, file, 102, 12, 4107);
			attr_dev(p4, "class", "mt-2 ml-0.5");
			add_location(p4, file, 108, 12, 4418);
			attr_dev(p5, "class", "mt-2 ml-0.5");
			add_location(p5, file, 117, 12, 4951);
			attr_dev(p6, "class", "mt-2 ml-0.5");
			add_location(p6, file, 123, 12, 5318);
			attr_dev(p7, "class", "text-3xl font-bold italic");
			add_location(p7, file, 129, 14, 5618);
			attr_dev(div1, "class", "flex m-4 justify-center");
			add_location(div1, file, 128, 12, 5566);
			attr_dev(li2, "class", "text-xl md:text-2xl font-bold");
			add_location(li2, file, 135, 12, 5816);
			attr_dev(p8, "class", "mt-2 ml-0.5");
			add_location(p8, file, 137, 12, 5963);
			add_location(em, file, 143, 14, 6282);
			attr_dev(p9, "class", "mt-2 ml-0.5");
			add_location(p9, file, 142, 12, 6244);
			attr_dev(p10, "class", "mt-2 ml-0.5");
			add_location(p10, file, 148, 12, 6583);
			attr_dev(ol, "class", "list-decimal mt-4");
			add_location(ol, file, 84, 10, 2996);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div0, anchor);
			append_dev(div0, p0);
			append_dev(p0, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, ol, anchor);
			append_dev(ol, li0);
			append_dev(li0, t2);
			append_dev(ol, t3);
			append_dev(ol, p1);
			append_dev(p1, t4);
			append_dev(ol, t5);
			append_dev(ol, p2);
			append_dev(p2, t6);
			append_dev(ol, t7);
			append_dev(ol, li1);
			append_dev(li1, t8);
			append_dev(ol, t9);
			append_dev(ol, p3);
			append_dev(p3, t10);
			append_dev(ol, t11);
			append_dev(ol, p4);
			append_dev(p4, t12);
			append_dev(ol, t13);
			append_dev(ol, p5);
			append_dev(p5, t14);
			append_dev(ol, t15);
			append_dev(ol, p6);
			append_dev(p6, t16);
			append_dev(ol, t17);
			append_dev(ol, div1);
			append_dev(div1, p7);
			append_dev(p7, t18);
			append_dev(ol, t19);
			append_dev(ol, li2);
			append_dev(li2, t20);
			append_dev(ol, t21);
			append_dev(ol, p8);
			append_dev(p8, t22);
			append_dev(ol, t23);
			append_dev(ol, p9);
			append_dev(p9, em);
			append_dev(em, t24);
			append_dev(p9, t25);
			append_dev(ol, t26);
			append_dev(ol, p10);
			append_dev(p10, t27);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(ol);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(76:8) {#if showGreeting}",
		ctx
	});

	return block;
}

// (174:10) {#each classmateColumn1 as classmate}
function create_each_block_1(ctx) {
	let li;
	let a;
	let t0_value = /*classmate*/ ctx[5].name + "";
	let t0;
	let t1;

	const block = {
		c: function create() {
			li = element("li");
			a = element("a");
			t0 = text(t0_value);
			t1 = space();
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			a = claim_element(li_nodes, "A", { id: true, href: true });
			var a_nodes = children(a);
			t0 = claim_text(a_nodes, t0_value);
			a_nodes.forEach(detach_dev);
			t1 = claim_space(li_nodes);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "id", /*classmate*/ ctx[5].name.toLowerCase().replace(/\s+/g, ""));
			attr_dev(a, "href", "classmate?back=classmates&firstName=" + /*classmate*/ ctx[5].firstName + "&name=" + /*classmate*/ ctx[5].name + "&photoId=" + /*classmate*/ ctx[5].cloudinaryId + "&deceased=" + /*classmate*/ ctx[5].deceased + "&confirmed=" + /*classmate*/ ctx[5].confirmed + "&");
			add_location(a, file, 177, 14, 7821);
			attr_dev(li, "class", "mt-2 transition duration-300 ease-in-out \n              hover:text-orange-500 hover:font-semibold hover:bg-gray-300 \n              transform hover:-translate-y-0 hover:scale-110");
			add_location(li, file, 174, 12, 7616);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, a);
			append_dev(a, t0);
			append_dev(li, t1);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(174:10) {#each classmateColumn1 as classmate}",
		ctx
	});

	return block;
}

// (187:10) {#each classmateColumn2 as classmate}
function create_each_block(ctx) {
	let li;
	let a;
	let t0_value = /*classmate*/ ctx[5].name + "";
	let t0;
	let t1;

	const block = {
		c: function create() {
			li = element("li");
			a = element("a");
			t0 = text(t0_value);
			t1 = space();
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			a = claim_element(li_nodes, "A", { id: true, class: true, href: true });
			var a_nodes = children(a);
			t0 = claim_text(a_nodes, t0_value);
			a_nodes.forEach(detach_dev);
			t1 = claim_space(li_nodes);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "id", /*classmate*/ ctx[5].name.toLowerCase().replace(/\s+/g, ""));
			attr_dev(a, "class", "");
			attr_dev(a, "href", "classmate?back=classmates&firstName=" + /*classmate*/ ctx[5].firstName + "&name=" + /*classmate*/ ctx[5].name + "&photoId=" + /*classmate*/ ctx[5].cloudinaryId + "&deceased=" + /*classmate*/ ctx[5].deceased + "&confirmed=" + /*classmate*/ ctx[5].confirmed);
			add_location(a, file, 190, 14, 8530);
			attr_dev(li, "class", "mt-2 transition duration-300 ease-in-out \n            hover:text-orange-500 hover:font-semibold hover:bg-gray-300 \n              transform hover:-translate-y-0 hover:scale-110");
			add_location(li, file, 187, 12, 8327);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, a);
			append_dev(a, t0);
			append_dev(li, t1);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(187:10) {#each classmateColumn2 as classmate}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section;
	let div0;
	let svg;
	let polygon;
	let t0;
	let div14;
	let div1;
	let h1;
	let t1;
	let t2;
	let div4;
	let div3;
	let div2;
	let img;
	let img_src_value;
	let t3;
	let div10;
	let div9;
	let div5;
	let t4;
	let t5;
	let div8;
	let div6;
	let t6;
	let t7;
	let div7;
	let t8;
	let t9;
	let t10;
	let div13;
	let div11;
	let p;
	let em;
	let t11;
	let t12;
	let t13;
	let letterindex;
	let t14;
	let div12;
	let ul0;
	let t15;
	let ul1;
	let t16;
	let backtotop;
	let current;
	let mounted;
	let dispose;
	let if_block = /*showGreeting*/ ctx[0] && create_if_block(ctx);

	letterindex = new LetterIndex({
			props: {
				pageName: "classmates",
				letterIndex: /*letterIndex*/ ctx[3]
			},
			$$inline: true
		});

	let each_value_1 = /*classmateColumn1*/ ctx[1];
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = /*classmateColumn2*/ ctx[2];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	backtotop = new BackToTop({
			props: { back: "classmates" },
			$$inline: true
		});

	const block = {
		c: function create() {
			section = element("section");
			div0 = element("div");
			svg = svg_element("svg");
			polygon = svg_element("polygon");
			t0 = space();
			div14 = element("div");
			div1 = element("div");
			h1 = element("h1");
			t1 = text("Class of 1973");
			t2 = space();
			div4 = element("div");
			div3 = element("div");
			div2 = element("div");
			img = element("img");
			t3 = space();
			div10 = element("div");
			div9 = element("div");
			div5 = element("div");
			t4 = text("3 Valuable Life Lessons Learned from a 50 Year Class Reunion");
			t5 = space();
			div8 = element("div");
			div6 = element("div");
			t6 = text("by Ken Hill");
			t7 = space();
			div7 = element("div");
			t8 = text("(Click here to display/hide)");
			t9 = space();
			if (if_block) if_block.c();
			t10 = space();
			div13 = element("div");
			div11 = element("div");
			p = element("p");
			em = element("em");
			t11 = text("Click");
			t12 = text(" on a name to see more.");
			t13 = space();
			create_component(letterindex.$$.fragment);
			t14 = space();
			div12 = element("div");
			ul0 = element("ul");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t15 = space();
			ul1 = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t16 = space();
			create_component(backtotop.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div0 = claim_element(section_nodes, "DIV", { class: true, style: true });
			var div0_nodes = children(div0);

			svg = claim_element(
				div0_nodes,
				"svg",
				{
					class: true,
					xmlns: true,
					preserveAspectRatio: true,
					version: true,
					viewBox: true,
					x: true,
					y: true
				},
				1
			);

			var svg_nodes = children(svg);
			polygon = claim_element(svg_nodes, "polygon", { class: true, points: true }, 1);
			children(polygon).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(section_nodes);
			div14 = claim_element(section_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div1 = claim_element(div14_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Class of 1973");
			h1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div14_nodes);
			div4 = claim_element(div14_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img = claim_element(div2_nodes, "IMG", { alt: true, class: true, src: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t3 = claim_space(div14_nodes);
			div10 = claim_element(div14_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div5 = claim_element(div9_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			t4 = claim_text(div5_nodes, "3 Valuable Life Lessons Learned from a 50 Year Class Reunion");
			div5_nodes.forEach(detach_dev);
			t5 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div6 = claim_element(div8_nodes, "DIV", {});
			var div6_nodes = children(div6);
			t6 = claim_text(div6_nodes, "by Ken Hill");
			div6_nodes.forEach(detach_dev);
			t7 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", {});
			var div7_nodes = children(div7);
			t8 = claim_text(div7_nodes, "(Click here to display/hide)");
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t9 = claim_space(div9_nodes);
			if (if_block) if_block.l(div9_nodes);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t10 = claim_space(div14_nodes);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div11 = claim_element(div13_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			p = claim_element(div11_nodes, "P", {});
			var p_nodes = children(p);
			em = claim_element(p_nodes, "EM", {});
			var em_nodes = children(em);
			t11 = claim_text(em_nodes, "Click");
			em_nodes.forEach(detach_dev);
			t12 = claim_text(p_nodes, " on a name to see more.");
			p_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t13 = claim_space(div13_nodes);
			claim_component(letterindex.$$.fragment, div13_nodes);
			t14 = claim_space(div13_nodes);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			ul0 = claim_element(div12_nodes, "UL", { class: true });
			var ul0_nodes = children(ul0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(ul0_nodes);
			}

			ul0_nodes.forEach(detach_dev);
			t15 = claim_space(div12_nodes);
			ul1 = claim_element(div12_nodes, "UL", { class: true });
			var ul1_nodes = children(ul1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul1_nodes);
			}

			ul1_nodes.forEach(detach_dev);
			t16 = claim_space(div12_nodes);
			claim_component(backtotop.$$.fragment, div12_nodes);
			div12_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(polygon, "class", "text-white fill-current");
			attr_dev(polygon, "points", "2560 0 2560 100 0 100");
			add_location(polygon, file, 28, 6, 908);
			attr_dev(svg, "class", "absolute bottom-0 overflow-hidden");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "preserveAspectRatio", "none");
			attr_dev(svg, "version", "1.1");
			attr_dev(svg, "viewBox", "0 0 2560 100");
			attr_dev(svg, "x", "0");
			attr_dev(svg, "y", "0");
			add_location(svg, file, 20, 4, 701);
			attr_dev(div0, "class", "bottom-auto top-0 left-0 right-0 w-full absolute\n    pointer-events-none overflow-hidden -mt-20");
			set_style(div0, "height", "80px");
			add_location(div0, file, 17, 2, 561);
			attr_dev(h1, "class", "my-12 text-3xl md:text-5xl font-semibold text-center");
			add_location(h1, file, 37, 6, 1171);
			attr_dev(div1, "class", "flex w-full justify-center");
			add_location(div1, file, 36, 4, 1124);
			attr_dev(img, "alt", "Homecoming");
			attr_dev(img, "class", "max-w-screen-sm lg:max-w-full h-20 md:h-28 lg:h-96 shadow-2xl \n              ml-0 md:ml-0 lg:ml-0 mb-8 lg:mb-none\n              transform scale-200 md:scale-150 lg:scale-100\n              border-0 shadow-xl-orange lg:shadow-2xl-orange");
			if (img.src !== (img_src_value = "chs_homecoming_float.jpeg")) attr_dev(img, "src", img_src_value);
			add_location(img, file, 45, 10, 1460);
			attr_dev(div2, "class", "flex flex-wrap w-full m-0 p-0 justify-center");
			add_location(div2, file, 44, 8, 1391);
			attr_dev(div3, "class", "flex max-w-full mb-4 content-start");
			add_location(div3, file, 43, 6, 1334);
			attr_dev(div4, "class", "flex justify-center w-full");
			add_location(div4, file, 42, 4, 1287);
			attr_dev(div5, "class", "text-xl md:text-3xl font-bold md:font-extrabold underline \n          italic text-center");
			add_location(div5, file, 59, 8, 2007);
			add_location(div6, file, 64, 10, 2274);
			add_location(div7, file, 70, 10, 2522);
			attr_dev(div8, "class", "text-xl md:text-2xl text-center text-base mb-4");
			add_location(div8, file, 63, 8, 2203);
			attr_dev(div9, "class", "flex flex-col flex-wrap w-3/4 justify-center m-auto");
			add_location(div9, file, 57, 6, 1932);
			attr_dev(div10, "class", "flex flex-col w-full mt-4 md:mt-0 mb-2 text-xl md:text-xl text-gray-500");
			add_location(div10, file, 56, 4, 1840);
			add_location(em, file, 166, 11, 7323);
			add_location(p, file, 166, 8, 7320);
			attr_dev(div11, "class", "flex flex-wrap place-content-center w-full");
			add_location(div11, file, 165, 6, 7255);
			attr_dev(ul0, "class", "text-lg text-gray-600 leading-tight");
			add_location(ul0, file, 172, 8, 7507);
			attr_dev(ul1, "class", "ml-0 md:ml-6 text-lg text-gray-600 leading-tight");
			add_location(ul1, file, 185, 8, 8205);
			attr_dev(div12, "class", "flex w-full justify-center");
			add_location(div12, file, 171, 6, 7458);
			attr_dev(div13, "class", "md:flex-row justify-center w-full lg:w-1/2 ml-1 py-2 \n      border-gray-300 border-2 shadow-2xl mt-4");
			add_location(div13, file, 163, 4, 7134);
			attr_dev(div14, "class", "container flex flex-wrap justify-center w-full lg:7/12 mx-auto \n    lg:py-none px-4");
			add_location(div14, file, 34, 2, 1022);
			attr_dev(section, "class", "relative py-12 lg:py-20");
			add_location(section, file, 16, 0, 517);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div0);
			append_dev(div0, svg);
			append_dev(svg, polygon);
			append_dev(section, t0);
			append_dev(section, div14);
			append_dev(div14, div1);
			append_dev(div1, h1);
			append_dev(h1, t1);
			append_dev(div14, t2);
			append_dev(div14, div4);
			append_dev(div4, div3);
			append_dev(div3, div2);
			append_dev(div2, img);
			append_dev(div14, t3);
			append_dev(div14, div10);
			append_dev(div10, div9);
			append_dev(div9, div5);
			append_dev(div5, t4);
			append_dev(div9, t5);
			append_dev(div9, div8);
			append_dev(div8, div6);
			append_dev(div6, t6);
			append_dev(div8, t7);
			append_dev(div8, div7);
			append_dev(div7, t8);
			append_dev(div9, t9);
			if (if_block) if_block.m(div9, null);
			append_dev(div14, t10);
			append_dev(div14, div13);
			append_dev(div13, div11);
			append_dev(div11, p);
			append_dev(p, em);
			append_dev(em, t11);
			append_dev(p, t12);
			append_dev(div13, t13);
			mount_component(letterindex, div13, null);
			append_dev(div13, t14);
			append_dev(div13, div12);
			append_dev(div12, ul0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(ul0, null);
			}

			append_dev(div12, t15);
			append_dev(div12, ul1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul1, null);
			}

			append_dev(div12, t16);
			mount_component(backtotop, div12, null);
			current = true;

			if (!mounted) {
				dispose = listen_dev(div7, "click", /*click_handler*/ ctx[4], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (/*showGreeting*/ ctx[0]) {
				if (if_block) ; else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div9, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*classmateColumn1*/ 2) {
				each_value_1 = /*classmateColumn1*/ ctx[1];
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(ul0, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*classmateColumn2*/ 4) {
				each_value = /*classmateColumn2*/ ctx[2];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(letterindex.$$.fragment, local);
			transition_in(backtotop.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(letterindex.$$.fragment, local);
			transition_out(backtotop.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			if (if_block) if_block.d();
			destroy_component(letterindex);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
			destroy_component(backtotop);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Classmates", slots, []);
	const [classmateColumn1, classmateColumn2] = createPersonGroups(classmates);
	const letterIndex = createNameIndex(classmateColumn1.concat(classmateColumn2));
	let showGreeting = false;
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Classmates> was created with unknown prop '${key}'`);
	});

	const click_handler = () => $$invalidate(0, showGreeting = !showGreeting);

	$$self.$capture_state = () => ({
		classmates,
		createNameIndex,
		createPersonGroups,
		BackToTop,
		LetterIndex,
		classmateColumn1,
		classmateColumn2,
		letterIndex,
		showGreeting
	});

	$$self.$inject_state = $$props => {
		if ("showGreeting" in $$props) $$invalidate(0, showGreeting = $$props.showGreeting);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [showGreeting, classmateColumn1, classmateColumn2, letterIndex, click_handler];
}

class Classmates extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Classmates",
			options,
			id: create_fragment.name
		});
	}
}

export default Classmates;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
