import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, g as globals, v as validate_slots, z as goto, e as element, t as text, c as claim_element, a as children, b as claim_text, f as detach_dev, h as attr_dev, j as add_location, k as insert_dev, l as append_dev, m as set_data_dev, n as space, o as svg_element, p as claim_space, q as set_style, r as set_input_value, u as listen_dev, w as prevent_default, x as noop, y as run_all } from './client.9f048243.js';
import { c as client, e as emailValidator, n as nameValidator, s as stateValidator, z as zipcodeValidator } from './validators.b13bff0b.js';

/* src/routes/updatecontact.svelte generated by Svelte v3.35.0 */

const { console: console_1 } = globals;

const file = "src/routes/updatecontact.svelte";

// (189:14) {#if tigerhuntResult !== ''}
function create_if_block_5(ctx) {
	let h2;
	let t;

	const block = {
		c: function create() {
			h2 = element("h2");
			t = text(/*tigerhuntResult*/ ctx[15]);
			this.h();
		},
		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t = claim_text(h2_nodes, /*tigerhuntResult*/ ctx[15]);
			h2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "text-green-700 italic");
			add_location(h2, file, 189, 16, 5686);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h2, anchor);
			append_dev(h2, t);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*tigerhuntResult*/ 32768) set_data_dev(t, /*tigerhuntResult*/ ctx[15]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_5.name,
		type: "if",
		source: "(189:14) {#if tigerhuntResult !== ''}",
		ctx
	});

	return block;
}

// (214:18) {#if !isPosterNameValid}
function create_if_block_4(ctx) {
	let div1;
	let div0;
	let t;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			t = text("Please enter your first & last name");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t = claim_text(div0_nodes, "Please enter your first & last name");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "place-self-end text-red-500");
			add_location(div0, file, 215, 22, 6971);
			attr_dev(div1, "class", "flex justify-end");
			add_location(div1, file, 214, 20, 6918);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(214:18) {#if !isPosterNameValid}",
		ctx
	});

	return block;
}

// (237:18) {#if !isPosterEmailValid}
function create_if_block_3(ctx) {
	let div1;
	let div0;
	let t;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			t = text("Please enter a valid email");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t = claim_text(div0_nodes, "Please enter a valid email");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "place-self-end text-red-500");
			add_location(div0, file, 238, 22, 8061);
			attr_dev(div1, "class", "flex justify-end");
			add_location(div1, file, 237, 20, 8008);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(237:18) {#if !isPosterEmailValid}",
		ctx
	});

	return block;
}

// (265:18) {#if !isContactEmailValid}
function create_if_block_2(ctx) {
	let div1;
	let div0;
	let t;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			t = text("Please enter a valid email");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t = claim_text(div0_nodes, "Please enter a valid email");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "place-self-end text-red-500");
			add_location(div0, file, 266, 22, 9298);
			attr_dev(div1, "class", "flex justify-end");
			add_location(div1, file, 265, 20, 9245);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(265:18) {#if !isContactEmailValid}",
		ctx
	});

	return block;
}

// (333:18) {#if !isContactStateValid}
function create_if_block_1(ctx) {
	let div1;
	let div0;
	let t;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			t = text("Please enter a valid 2-character state");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t = claim_text(div0_nodes, "Please enter a valid 2-character state");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "place-self-end text-red-500");
			add_location(div0, file, 334, 22, 12635);
			attr_dev(div1, "class", "flex justify-end");
			add_location(div1, file, 333, 20, 12582);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(333:18) {#if !isContactStateValid}",
		ctx
	});

	return block;
}

// (340:18) {#if !isContactZipcodeValid}
function create_if_block(ctx) {
	let div1;
	let div0;
	let t;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			t = text("Please enter a valid 5-digit zipcode");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t = claim_text(div0_nodes, "Please enter a valid 5-digit zipcode");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "place-self-end text-red-500");
			add_location(div0, file, 341, 22, 12940);
			attr_dev(div1, "class", "flex justify-end");
			add_location(div1, file, 340, 20, 12887);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(340:18) {#if !isContactZipcodeValid}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section0;
	let div15;
	let div14;
	let div13;
	let div12;
	let div11;
	let div10;
	let h4;
	let t0;
	let t1;
	let t2;
	let t3;
	let p;
	let t4;
	let t5;
	let t6;
	let form;
	let div2;
	let h20;
	let t7;
	let t8;
	let div0;
	let label0;
	let t9;
	let t10;
	let input0;
	let t11;
	let t12;
	let div1;
	let label1;
	let t13;
	let t14;
	let input1;
	let t15;
	let t16;
	let div8;
	let h21;
	let t17;
	let t18;
	let t19;
	let div3;
	let label2;
	let t20;
	let t21;
	let input2;
	let t22;
	let t23;
	let div4;
	let label3;
	let t24;
	let t25;
	let input3;
	let t26;
	let div5;
	let span0;
	let label4;
	let t27;
	let t28;
	let input4;
	let t29;
	let span1;
	let label5;
	let t30;
	let t31;
	let input5;
	let t32;
	let span2;
	let label6;
	let t33;
	let t34;
	let input6;
	let t35;
	let t36;
	let t37;
	let div6;
	let span3;
	let label7;
	let t38;
	let t39;
	let input7;
	let t40;
	let span4;
	let label8;
	let t41;
	let t42;
	let input8;
	let t43;
	let div7;
	let label9;
	let t44;
	let t45;
	let textarea;
	let t46;
	let div9;
	let button0;
	let t47;
	let t48;
	let div16;
	let svg;
	let polygon;
	let t49;
	let section1;
	let div17;
	let button1;
	let t50;
	let mounted;
	let dispose;
	let if_block0 = /*tigerhuntResult*/ ctx[15] !== "" && create_if_block_5(ctx);
	let if_block1 = !/*isPosterNameValid*/ ctx[11] && create_if_block_4(ctx);
	let if_block2 = !/*isPosterEmailValid*/ ctx[10] && create_if_block_3(ctx);
	let if_block3 = !/*isContactEmailValid*/ ctx[12] && create_if_block_2(ctx);
	let if_block4 = !/*isContactStateValid*/ ctx[13] && create_if_block_1(ctx);
	let if_block5 = !/*isContactZipcodeValid*/ ctx[14] && create_if_block(ctx);

	const block = {
		c: function create() {
			section0 = element("section");
			div15 = element("div");
			div14 = element("div");
			div13 = element("div");
			div12 = element("div");
			div11 = element("div");
			div10 = element("div");
			h4 = element("h4");
			t0 = text("Do you know how to contact ");
			t1 = text(/*name*/ ctx[16]);
			t2 = text("?");
			t3 = space();
			p = element("p");
			t4 = text("Complete this form if you know more about this individual to\n                help us keep everyone updated about our upcoming reunion!");
			t5 = space();
			if (if_block0) if_block0.c();
			t6 = space();
			form = element("form");
			div2 = element("div");
			h20 = element("h2");
			t7 = text("About You");
			t8 = space();
			div0 = element("div");
			label0 = element("label");
			t9 = text("Full Name (required)");
			t10 = space();
			input0 = element("input");
			t11 = space();
			if (if_block1) if_block1.c();
			t12 = space();
			div1 = element("div");
			label1 = element("label");
			t13 = text("Email (required)");
			t14 = space();
			input1 = element("input");
			t15 = space();
			if (if_block2) if_block2.c();
			t16 = space();
			div8 = element("div");
			h21 = element("h2");
			t17 = text("About ");
			t18 = text(/*name*/ ctx[16]);
			t19 = space();
			div3 = element("div");
			label2 = element("label");
			t20 = text("Email");
			t21 = space();
			input2 = element("input");
			t22 = space();
			if (if_block3) if_block3.c();
			t23 = space();
			div4 = element("div");
			label3 = element("label");
			t24 = text("Street");
			t25 = space();
			input3 = element("input");
			t26 = space();
			div5 = element("div");
			span0 = element("span");
			label4 = element("label");
			t27 = text("City");
			t28 = space();
			input4 = element("input");
			t29 = space();
			span1 = element("span");
			label5 = element("label");
			t30 = text("State");
			t31 = space();
			input5 = element("input");
			t32 = space();
			span2 = element("span");
			label6 = element("label");
			t33 = text("Zipcode");
			t34 = space();
			input6 = element("input");
			t35 = space();
			if (if_block4) if_block4.c();
			t36 = space();
			if (if_block5) if_block5.c();
			t37 = space();
			div6 = element("div");
			span3 = element("span");
			label7 = element("label");
			t38 = text("Phone");
			t39 = space();
			input7 = element("input");
			t40 = space();
			span4 = element("span");
			label8 = element("label");
			t41 = text("Deceased");
			t42 = space();
			input8 = element("input");
			t43 = space();
			div7 = element("div");
			label9 = element("label");
			t44 = text("Info about this classmate");
			t45 = space();
			textarea = element("textarea");
			t46 = space();
			div9 = element("div");
			button0 = element("button");
			t47 = text("Submit Info");
			t48 = space();
			div16 = element("div");
			svg = svg_element("svg");
			polygon = svg_element("polygon");
			t49 = space();
			section1 = element("section");
			div17 = element("div");
			button1 = element("button");
			t50 = text("Back");
			this.h();
		},
		l: function claim(nodes) {
			section0 = claim_element(nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div15 = claim_element(section0_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			h4 = claim_element(div10_nodes, "H4", { class: true });
			var h4_nodes = children(h4);
			t0 = claim_text(h4_nodes, "Do you know how to contact ");
			t1 = claim_text(h4_nodes, /*name*/ ctx[16]);
			t2 = claim_text(h4_nodes, "?");
			h4_nodes.forEach(detach_dev);
			t3 = claim_space(div10_nodes);
			p = claim_element(div10_nodes, "P", { class: true });
			var p_nodes = children(p);
			t4 = claim_text(p_nodes, "Complete this form if you know more about this individual to\n                help us keep everyone updated about our upcoming reunion!");
			p_nodes.forEach(detach_dev);
			t5 = claim_space(div10_nodes);
			if (if_block0) if_block0.l(div10_nodes);
			t6 = claim_space(div10_nodes);
			form = claim_element(div10_nodes, "FORM", { method: true, enctype: true });
			var form_nodes = children(form);
			div2 = claim_element(form_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h20 = claim_element(div2_nodes, "H2", { class: true });
			var h20_nodes = children(h20);
			t7 = claim_text(h20_nodes, "About You");
			h20_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			label0 = claim_element(div0_nodes, "LABEL", { class: true, for: true });
			var label0_nodes = children(label0);
			t9 = claim_text(label0_nodes, "Full Name (required)");
			label0_nodes.forEach(detach_dev);
			t10 = claim_space(div0_nodes);

			input0 = claim_element(div0_nodes, "INPUT", {
				name: true,
				type: true,
				required: true,
				"aria-required": true,
				class: true,
				placeholder: true,
				style: true
			});

			div0_nodes.forEach(detach_dev);
			t11 = claim_space(div2_nodes);
			if (if_block1) if_block1.l(div2_nodes);
			t12 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			label1 = claim_element(div1_nodes, "LABEL", { class: true, for: true });
			var label1_nodes = children(label1);
			t13 = claim_text(label1_nodes, "Email (required)");
			label1_nodes.forEach(detach_dev);
			t14 = claim_space(div1_nodes);

			input1 = claim_element(div1_nodes, "INPUT", {
				name: true,
				type: true,
				required: true,
				"aria-required": true,
				class: true,
				placeholder: true,
				style: true
			});

			div1_nodes.forEach(detach_dev);
			t15 = claim_space(div2_nodes);
			if (if_block2) if_block2.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			t16 = claim_space(form_nodes);
			div8 = claim_element(form_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			h21 = claim_element(div8_nodes, "H2", { class: true });
			var h21_nodes = children(h21);
			t17 = claim_text(h21_nodes, "About ");
			t18 = claim_text(h21_nodes, /*name*/ ctx[16]);
			h21_nodes.forEach(detach_dev);
			t19 = claim_space(div8_nodes);
			div3 = claim_element(div8_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label2 = claim_element(div3_nodes, "LABEL", { class: true, for: true });
			var label2_nodes = children(label2);
			t20 = claim_text(label2_nodes, "Email");
			label2_nodes.forEach(detach_dev);
			t21 = claim_space(div3_nodes);

			input2 = claim_element(div3_nodes, "INPUT", {
				name: true,
				type: true,
				class: true,
				placeholder: true,
				style: true
			});

			div3_nodes.forEach(detach_dev);
			t22 = claim_space(div8_nodes);
			if (if_block3) if_block3.l(div8_nodes);
			t23 = claim_space(div8_nodes);
			div4 = claim_element(div8_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			label3 = claim_element(div4_nodes, "LABEL", { class: true, for: true });
			var label3_nodes = children(label3);
			t24 = claim_text(label3_nodes, "Street");
			label3_nodes.forEach(detach_dev);
			t25 = claim_space(div4_nodes);

			input3 = claim_element(div4_nodes, "INPUT", {
				name: true,
				type: true,
				class: true,
				placeholder: true,
				style: true
			});

			div4_nodes.forEach(detach_dev);
			t26 = claim_space(div8_nodes);
			div5 = claim_element(div8_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			span0 = claim_element(div5_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			label4 = claim_element(span0_nodes, "LABEL", { class: true, for: true });
			var label4_nodes = children(label4);
			t27 = claim_text(label4_nodes, "City");
			label4_nodes.forEach(detach_dev);
			t28 = claim_space(span0_nodes);

			input4 = claim_element(span0_nodes, "INPUT", {
				name: true,
				type: true,
				class: true,
				placeholder: true,
				style: true
			});

			span0_nodes.forEach(detach_dev);
			t29 = claim_space(div5_nodes);
			span1 = claim_element(div5_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			label5 = claim_element(span1_nodes, "LABEL", { class: true, for: true });
			var label5_nodes = children(label5);
			t30 = claim_text(label5_nodes, "State");
			label5_nodes.forEach(detach_dev);
			t31 = claim_space(span1_nodes);

			input5 = claim_element(span1_nodes, "INPUT", {
				name: true,
				type: true,
				class: true,
				placeholder: true,
				style: true
			});

			span1_nodes.forEach(detach_dev);
			t32 = claim_space(div5_nodes);
			span2 = claim_element(div5_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			label6 = claim_element(span2_nodes, "LABEL", { class: true, for: true });
			var label6_nodes = children(label6);
			t33 = claim_text(label6_nodes, "Zipcode");
			label6_nodes.forEach(detach_dev);
			t34 = claim_space(span2_nodes);

			input6 = claim_element(span2_nodes, "INPUT", {
				name: true,
				type: true,
				class: true,
				placeholder: true,
				style: true
			});

			span2_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t35 = claim_space(div8_nodes);
			if (if_block4) if_block4.l(div8_nodes);
			t36 = claim_space(div8_nodes);
			if (if_block5) if_block5.l(div8_nodes);
			t37 = claim_space(div8_nodes);
			div6 = claim_element(div8_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			span3 = claim_element(div6_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			label7 = claim_element(span3_nodes, "LABEL", { class: true, for: true });
			var label7_nodes = children(label7);
			t38 = claim_text(label7_nodes, "Phone");
			label7_nodes.forEach(detach_dev);
			t39 = claim_space(span3_nodes);

			input7 = claim_element(span3_nodes, "INPUT", {
				name: true,
				type: true,
				class: true,
				placeholder: true,
				style: true
			});

			span3_nodes.forEach(detach_dev);
			t40 = claim_space(div6_nodes);
			span4 = claim_element(div6_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			label8 = claim_element(span4_nodes, "LABEL", { for: true });
			var label8_nodes = children(label8);
			t41 = claim_text(label8_nodes, "Deceased");
			label8_nodes.forEach(detach_dev);
			t42 = claim_space(span4_nodes);
			input8 = claim_element(span4_nodes, "INPUT", { class: true, name: true, type: true });
			span4_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t43 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label9 = claim_element(div7_nodes, "LABEL", { class: true, for: true });
			var label9_nodes = children(label9);
			t44 = claim_text(label9_nodes, "Info about this classmate");
			label9_nodes.forEach(detach_dev);
			t45 = claim_space(div7_nodes);

			textarea = claim_element(div7_nodes, "TEXTAREA", {
				name: true,
				rows: true,
				cols: true,
				"aria-required": true,
				class: true,
				placeholder: true
			});

			children(textarea).forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t46 = claim_space(form_nodes);
			div9 = claim_element(form_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			button0 = claim_element(div9_nodes, "BUTTON", { type: true, class: true });
			var button0_nodes = children(button0);
			t47 = claim_text(button0_nodes, "Submit Info");
			button0_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t48 = claim_space(section0_nodes);
			div16 = claim_element(section0_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);

			svg = claim_element(
				div16_nodes,
				"svg",
				{
					class: true,
					xmlns: true,
					preserveAspectRatio: true,
					version: true,
					viewBox: true,
					x: true,
					y: true
				},
				1
			);

			var svg_nodes = children(svg);
			polygon = claim_element(svg_nodes, "polygon", { class: true, points: true }, 1);
			children(polygon).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t49 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div17 = claim_element(section1_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			button1 = claim_element(div17_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t50 = claim_text(button1_nodes, "Back");
			button1_nodes.forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h4, "class", "text-2xl font-semibold");
			add_location(h4, file, 182, 14, 5313);
			attr_dev(p, "class", "leading-relaxed mt-1 mb-4 text-gray-600");
			add_location(p, file, 183, 14, 5404);
			attr_dev(h20, "class", "text-white bg-gray-900 text-center");
			add_location(h20, file, 195, 18, 5957);
			attr_dev(label0, "class", "block uppercase text-gray-700 text-xs font-bold mb-2");
			attr_dev(label0, "for", "full-name");
			add_location(label0, file, 199, 20, 6137);
			attr_dev(input0, "name", "name");
			attr_dev(input0, "type", "text");
			input0.required = true;
			attr_dev(input0, "aria-required", "true");
			attr_dev(input0, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                      bg-white rounded text-sm shadow focus:outline-none focus:ring\n                      w-full");
			attr_dev(input0, "placeholder", "First Last");
			set_style(input0, "transition", "all 0.15s ease 0s");
			add_location(input0, file, 204, 20, 6358);
			attr_dev(div0, "class", "relative w-full mb-3 mt-1");
			add_location(div0, file, 198, 18, 6077);
			attr_dev(label1, "class", "block uppercase text-gray-700 text-xs font-bold mb-2");
			attr_dev(label1, "for", "email");
			add_location(label1, file, 222, 20, 7227);
			attr_dev(input1, "name", "from");
			attr_dev(input1, "type", "text");
			input1.required = true;
			attr_dev(input1, "aria-required", "true");
			attr_dev(input1, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                      bg-white rounded text-sm shadow focus:outline-none focus:ring\n                      w-full");
			attr_dev(input1, "placeholder", "jdoe@domain.com");
			set_style(input1, "transition", "all 0.15s ease 0s");
			add_location(input1, file, 227, 20, 7440);
			attr_dev(div1, "class", "relative w-full mb-3");
			add_location(div1, file, 221, 18, 7172);
			attr_dev(div2, "class", "relative w-full mt-8");
			add_location(div2, file, 194, 16, 5904);
			attr_dev(h21, "class", "text-white bg-gray-900 text-center");
			add_location(h21, file, 246, 18, 8332);
			attr_dev(label2, "class", "block uppercase text-gray-700 text-xs font-bold mt-2 mb-2");
			attr_dev(label2, "for", "email");
			add_location(label2, file, 251, 20, 8518);
			attr_dev(input2, "name", "from");
			attr_dev(input2, "type", "text");
			attr_dev(input2, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                      bg-white rounded text-sm shadow focus:outline-none focus:ring\n                      w-full");
			attr_dev(input2, "placeholder", "jdoe@domain.com");
			set_style(input2, "transition", "all 0.15s ease 0s");
			add_location(input2, file, 256, 20, 8725);
			attr_dev(div3, "class", "relative w-full mt-1 mb-3");
			add_location(div3, file, 250, 18, 8458);
			attr_dev(label3, "class", "block uppercase text-gray-700 text-xs font-bold mb-3");
			attr_dev(label3, "for", "street");
			add_location(label3, file, 273, 20, 9545);
			attr_dev(input3, "name", "from");
			attr_dev(input3, "type", "text");
			attr_dev(input3, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                      bg-white rounded text-sm shadow focus:outline-none focus:ring\n                      w-full");
			attr_dev(input3, "placeholder", "1111 Any St.");
			set_style(input3, "transition", "all 0.15s ease 0s");
			add_location(input3, file, 278, 20, 9750);
			attr_dev(div4, "class", "relative w-full mb-3");
			add_location(div4, file, 272, 18, 9490);
			attr_dev(label4, "class", "block uppercase text-gray-700 text-xs font-bold mb-2");
			attr_dev(label4, "for", "city");
			add_location(label4, file, 289, 22, 10313);
			attr_dev(input4, "name", "from");
			attr_dev(input4, "type", "text");
			attr_dev(input4, "class", "w-full border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                        bg-white rounded text-sm shadow focus:outline-none focus:ring");
			attr_dev(input4, "placeholder", "Anytown");
			set_style(input4, "transition", "all 0.15s ease 0s");
			add_location(input4, file, 294, 22, 10524);
			attr_dev(span0, "class", "relaive w-8/12 mb-3");
			add_location(span0, file, 288, 20, 10256);
			attr_dev(label5, "class", "block uppercase text-gray-700 text-xs font-bold mb-2");
			attr_dev(label5, "for", "state");
			add_location(label5, file, 302, 22, 11006);
			attr_dev(input5, "name", "from");
			attr_dev(input5, "type", "text");
			attr_dev(input5, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                        bg-white rounded text-sm shadow focus:outline-none focus:ring\n                        w-full");
			attr_dev(input5, "placeholder", "XX");
			set_style(input5, "transition", "all 0.15s ease 0s");
			add_location(input5, file, 307, 22, 11219);
			attr_dev(span1, "class", "relative w-14 ml-4 mb-3");
			add_location(span1, file, 301, 20, 10945);
			attr_dev(label6, "class", "block uppercase text-gray-700 text-xs font-bold mb-2");
			attr_dev(label6, "for", "phone");
			add_location(label6, file, 317, 22, 11789);
			attr_dev(input6, "name", "from");
			attr_dev(input6, "type", "text");
			attr_dev(input6, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                        bg-white rounded text-sm shadow focus:outline-none focus:ring\n                        w-full");
			attr_dev(input6, "placeholder", "00000");
			set_style(input6, "transition", "all 0.15s ease 0s");
			add_location(input6, file, 322, 22, 12003);
			attr_dev(span2, "class", "relative w-20 ml-0 md:ml-4 mb-3");
			add_location(span2, file, 316, 20, 11720);
			attr_dev(div5, "class", "flex flex-wrap relative w-full mb-1");
			add_location(div5, file, 287, 18, 10186);
			attr_dev(label7, "class", "block uppercase text-gray-700 text-xs font-bold mb-2");
			attr_dev(label7, "for", "phone");
			add_location(label7, file, 349, 22, 13268);
			attr_dev(input7, "name", "from");
			attr_dev(input7, "type", "tel");
			attr_dev(input7, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                        bg-white rounded text-sm shadow focus:outline-none focus:ring\n                        w-full");
			attr_dev(input7, "placeholder", "(999) 999-9999");
			set_style(input7, "transition", "all 0.15s ease 0s");
			add_location(input7, file, 354, 22, 13480);
			attr_dev(span3, "class", "relative w-36 mb-3");
			add_location(span3, file, 348, 20, 13212);
			attr_dev(label8, "for", "deceased");
			add_location(label8, file, 363, 22, 13993);
			attr_dev(input8, "class", "self-center w-full h-6 mt-2");
			attr_dev(input8, "name", "deceased");
			attr_dev(input8, "type", "checkbox");
			add_location(input8, file, 366, 22, 14102);
			attr_dev(span4, "class", "flex flex-col w-20 ml-6");
			add_location(span4, file, 362, 20, 13932);
			attr_dev(div6, "class", "flex flex-wrap relative w-full mb-1");
			add_location(div6, file, 347, 18, 13142);
			attr_dev(label9, "class", "block uppercase text-gray-700 text-xs font-bold mb-2");
			attr_dev(label9, "for", "message");
			add_location(label9, file, 373, 20, 14399);
			attr_dev(textarea, "name", "message");
			attr_dev(textarea, "rows", "4");
			attr_dev(textarea, "cols", "80");
			attr_dev(textarea, "aria-required", "false");
			attr_dev(textarea, "class", "border-0 px-3 py-3 placeholder-gray-400 text-gray-700\n                      bg-white rounded text-sm shadow focus:outline-none focus:ring\n                      w-full");
			attr_dev(textarea, "placeholder", "Type a message...");
			add_location(textarea, file, 378, 20, 14623);
			attr_dev(div7, "class", "relative w-full mb-3");
			add_location(div7, file, 372, 18, 14344);
			attr_dev(div8, "class", "relative w-full mb-3 mt-8");
			add_location(div8, file, 245, 16, 8274);
			attr_dev(button0, "type", "submit");
			attr_dev(button0, "class", "bg-orange-500 text-white active:bg-gray-700 text-sm\n                    font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg\n                    outline-none focus:outline-none mr-1 mb-1\n                    transition duration-300 ease-in-out \n                  hover:text-gray-800 hover:font-semibold transform hover:-translate-y-0 hover:scale-110");
			add_location(button0, file, 388, 18, 15117);
			attr_dev(div9, "class", "text-center mt-6");
			add_location(div9, file, 387, 16, 15068);
			attr_dev(form, "method", "post");
			attr_dev(form, "enctype", "application/json");
			add_location(form, file, 192, 14, 5780);
			attr_dev(div10, "class", "flex-auto m-auto p-5 lg:p-10");
			add_location(div10, file, 181, 12, 5256);
			attr_dev(div11, "class", "relative flex flex-col min-w-0 break-words mb-6 \n            shadow-lg rounded-lg bg-gray-300");
			add_location(div11, file, 179, 10, 5136);
			attr_dev(div12, "class", "lg:w-6/12 px-4");
			add_location(div12, file, 178, 8, 5097);
			attr_dev(div13, "class", "flex flex-wrap justify-center");
			add_location(div13, file, 177, 6, 5045);
			attr_dev(div14, "class", "container w-full justify-center m-auto px-4");
			add_location(div14, file, 175, 4, 4980);
			attr_dev(div15, "class", "relative block bg-gray-900 pt-24 pb-20 w-full");
			add_location(div15, file, 174, 2, 4916);
			attr_dev(polygon, "class", "text-white fill-current");
			attr_dev(polygon, "points", "2560 0 2560 100 0 100");
			add_location(polygon, file, 417, 6, 16047);
			attr_dev(svg, "class", "absolute bottom-0 overflow-hidden");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "preserveAspectRatio", "none");
			attr_dev(svg, "version", "1.1");
			attr_dev(svg, "viewBox", "0 0 2560 100");
			attr_dev(svg, "x", "0");
			attr_dev(svg, "y", "0");
			add_location(svg, file, 409, 4, 15840);
			attr_dev(div16, "class", "bottom-auto top-0 left-0 right-0 w-full relative\n    pointer-events-none overflow-hidden -mt-20");
			add_location(div16, file, 405, 2, 15717);
			attr_dev(section0, "class", "flex flex-wrap place-content-center w-full pt-12 pb-0");
			add_location(section0, file, 173, 0, 4842);
			attr_dev(button1, "class", "bg-orange-500 text-white active:bg-gray-700 text-sm\n      font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg\n      outline-none focus:outline-none mr-1 mb-1\n      transition duration-300 ease-in-out \n      hover:text-gray-700 hover:font-semibold transform hover:-translate-y-0 hover:scale-110");
			add_location(button1, file, 427, 4, 16327);
			attr_dev(div17, "class", "flex place-content-center text-center w-full -mt-2");
			add_location(div17, file, 426, 2, 16258);
			attr_dev(section1, "class", "flex flex-wrap place-content-center w-full h-48 ml-0 md:ml-8 -mt-8");
			add_location(section1, file, 425, 0, 16171);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section0, anchor);
			append_dev(section0, div15);
			append_dev(div15, div14);
			append_dev(div14, div13);
			append_dev(div13, div12);
			append_dev(div12, div11);
			append_dev(div11, div10);
			append_dev(div10, h4);
			append_dev(h4, t0);
			append_dev(h4, t1);
			append_dev(h4, t2);
			append_dev(div10, t3);
			append_dev(div10, p);
			append_dev(p, t4);
			append_dev(div10, t5);
			if (if_block0) if_block0.m(div10, null);
			append_dev(div10, t6);
			append_dev(div10, form);
			append_dev(form, div2);
			append_dev(div2, h20);
			append_dev(h20, t7);
			append_dev(div2, t8);
			append_dev(div2, div0);
			append_dev(div0, label0);
			append_dev(label0, t9);
			append_dev(div0, t10);
			append_dev(div0, input0);
			set_input_value(input0, /*posterName*/ ctx[0]);
			append_dev(div2, t11);
			if (if_block1) if_block1.m(div2, null);
			append_dev(div2, t12);
			append_dev(div2, div1);
			append_dev(div1, label1);
			append_dev(label1, t13);
			append_dev(div1, t14);
			append_dev(div1, input1);
			set_input_value(input1, /*posterEmail*/ ctx[1]);
			append_dev(div2, t15);
			if (if_block2) if_block2.m(div2, null);
			append_dev(form, t16);
			append_dev(form, div8);
			append_dev(div8, h21);
			append_dev(h21, t17);
			append_dev(h21, t18);
			append_dev(div8, t19);
			append_dev(div8, div3);
			append_dev(div3, label2);
			append_dev(label2, t20);
			append_dev(div3, t21);
			append_dev(div3, input2);
			set_input_value(input2, /*contactEmail*/ ctx[2]);
			append_dev(div8, t22);
			if (if_block3) if_block3.m(div8, null);
			append_dev(div8, t23);
			append_dev(div8, div4);
			append_dev(div4, label3);
			append_dev(label3, t24);
			append_dev(div4, t25);
			append_dev(div4, input3);
			set_input_value(input3, /*contactStreet*/ ctx[4]);
			append_dev(div8, t26);
			append_dev(div8, div5);
			append_dev(div5, span0);
			append_dev(span0, label4);
			append_dev(label4, t27);
			append_dev(span0, t28);
			append_dev(span0, input4);
			set_input_value(input4, /*contactCity*/ ctx[5]);
			append_dev(div5, t29);
			append_dev(div5, span1);
			append_dev(span1, label5);
			append_dev(label5, t30);
			append_dev(span1, t31);
			append_dev(span1, input5);
			set_input_value(input5, /*contactState*/ ctx[6]);
			append_dev(div5, t32);
			append_dev(div5, span2);
			append_dev(span2, label6);
			append_dev(label6, t33);
			append_dev(span2, t34);
			append_dev(span2, input6);
			set_input_value(input6, /*contactZipcode*/ ctx[7]);
			append_dev(div8, t35);
			if (if_block4) if_block4.m(div8, null);
			append_dev(div8, t36);
			if (if_block5) if_block5.m(div8, null);
			append_dev(div8, t37);
			append_dev(div8, div6);
			append_dev(div6, span3);
			append_dev(span3, label7);
			append_dev(label7, t38);
			append_dev(span3, t39);
			append_dev(span3, input7);
			set_input_value(input7, /*contactPhone*/ ctx[8]);
			append_dev(div6, t40);
			append_dev(div6, span4);
			append_dev(span4, label8);
			append_dev(label8, t41);
			append_dev(span4, t42);
			append_dev(span4, input8);
			input8.checked = /*isContactDeceased*/ ctx[3];
			append_dev(div8, t43);
			append_dev(div8, div7);
			append_dev(div7, label9);
			append_dev(label9, t44);
			append_dev(div7, t45);
			append_dev(div7, textarea);
			set_input_value(textarea, /*contactInfo*/ ctx[9]);
			append_dev(form, t46);
			append_dev(form, div9);
			append_dev(div9, button0);
			append_dev(button0, t47);
			append_dev(section0, t48);
			append_dev(section0, div16);
			append_dev(div16, svg);
			append_dev(svg, polygon);
			insert_dev(target, t49, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, div17);
			append_dev(div17, button1);
			append_dev(button1, t50);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[25]),
					listen_dev(input0, "input", /*validatePosterName*/ ctx[19], false, false, false),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[26]),
					listen_dev(input1, "input", /*validatePosterEmail*/ ctx[17], false, false, false),
					listen_dev(input2, "input", /*input2_input_handler*/ ctx[27]),
					listen_dev(input2, "input", /*validateClassmateEmail*/ ctx[18], false, false, false),
					listen_dev(input3, "input", /*input3_input_handler*/ ctx[28]),
					listen_dev(input4, "input", /*input4_input_handler*/ ctx[29]),
					listen_dev(input5, "input", /*input5_input_handler*/ ctx[30]),
					listen_dev(input5, "input", /*validateClassmateState*/ ctx[20], false, false, false),
					listen_dev(input6, "input", /*input6_input_handler*/ ctx[31]),
					listen_dev(input6, "input", /*validateClassmateZipcode*/ ctx[21], false, false, false),
					listen_dev(input7, "input", /*input7_input_handler*/ ctx[32]),
					listen_dev(input8, "change", /*input8_change_handler*/ ctx[33]),
					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[34]),
					listen_dev(form, "submit", prevent_default(/*handleSubmit*/ ctx[22]), false, true, false),
					listen_dev(button1, "click", /*handleBack*/ ctx[23], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (/*tigerhuntResult*/ ctx[15] !== "") {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_5(ctx);
					if_block0.c();
					if_block0.m(div10, t6);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (dirty[0] & /*posterName*/ 1 && input0.value !== /*posterName*/ ctx[0]) {
				set_input_value(input0, /*posterName*/ ctx[0]);
			}

			if (!/*isPosterNameValid*/ ctx[11]) {
				if (if_block1) ; else {
					if_block1 = create_if_block_4(ctx);
					if_block1.c();
					if_block1.m(div2, t12);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (dirty[0] & /*posterEmail*/ 2 && input1.value !== /*posterEmail*/ ctx[1]) {
				set_input_value(input1, /*posterEmail*/ ctx[1]);
			}

			if (!/*isPosterEmailValid*/ ctx[10]) {
				if (if_block2) ; else {
					if_block2 = create_if_block_3(ctx);
					if_block2.c();
					if_block2.m(div2, null);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}

			if (dirty[0] & /*contactEmail*/ 4 && input2.value !== /*contactEmail*/ ctx[2]) {
				set_input_value(input2, /*contactEmail*/ ctx[2]);
			}

			if (!/*isContactEmailValid*/ ctx[12]) {
				if (if_block3) ; else {
					if_block3 = create_if_block_2(ctx);
					if_block3.c();
					if_block3.m(div8, t23);
				}
			} else if (if_block3) {
				if_block3.d(1);
				if_block3 = null;
			}

			if (dirty[0] & /*contactStreet*/ 16 && input3.value !== /*contactStreet*/ ctx[4]) {
				set_input_value(input3, /*contactStreet*/ ctx[4]);
			}

			if (dirty[0] & /*contactCity*/ 32 && input4.value !== /*contactCity*/ ctx[5]) {
				set_input_value(input4, /*contactCity*/ ctx[5]);
			}

			if (dirty[0] & /*contactState*/ 64 && input5.value !== /*contactState*/ ctx[6]) {
				set_input_value(input5, /*contactState*/ ctx[6]);
			}

			if (dirty[0] & /*contactZipcode*/ 128 && input6.value !== /*contactZipcode*/ ctx[7]) {
				set_input_value(input6, /*contactZipcode*/ ctx[7]);
			}

			if (!/*isContactStateValid*/ ctx[13]) {
				if (if_block4) ; else {
					if_block4 = create_if_block_1(ctx);
					if_block4.c();
					if_block4.m(div8, t36);
				}
			} else if (if_block4) {
				if_block4.d(1);
				if_block4 = null;
			}

			if (!/*isContactZipcodeValid*/ ctx[14]) {
				if (if_block5) ; else {
					if_block5 = create_if_block(ctx);
					if_block5.c();
					if_block5.m(div8, t37);
				}
			} else if (if_block5) {
				if_block5.d(1);
				if_block5 = null;
			}

			if (dirty[0] & /*contactPhone*/ 256) {
				set_input_value(input7, /*contactPhone*/ ctx[8]);
			}

			if (dirty[0] & /*isContactDeceased*/ 8) {
				input8.checked = /*isContactDeceased*/ ctx[3];
			}

			if (dirty[0] & /*contactInfo*/ 512) {
				set_input_value(textarea, /*contactInfo*/ ctx[9]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section0);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
			if (if_block4) if_block4.d();
			if (if_block5) if_block5.d();
			if (detaching) detach_dev(t49);
			if (detaching) detach_dev(section1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page, session) {
	return {
		params: {
			back: page.query.back,
			firstName: page.query.firstName,
			name: page.query.name,
			cloudinaryId: page.query.photoId,
			deceased: page.query.deceased,
			confirmed: page.query.confirmed,
			type: page.query.type,
			department: page.query.department,
			position: page.query.position
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Updatecontact", slots, []);
	let { params } = $$props;
	let { back, firstName, name, cloudinaryId, deceased, confirmed, type, department, position } = params;
	let posterName = "";
	let posterEmail = "";
	let contactEmail = "";
	let isContactDeceased = deceased === "TRUE" ? true : false;
	let contactStreet = "";
	let contactCity = "";
	let contactState = "";
	let contactZipcode = "";
	let contactPhone = "";
	let contactInfo = "";
	let isPosterEmailValid = true;
	let isPosterNameValid = true;
	let isContactEmailValid = true;
	let isContactStateValid = true;
	let isContactZipcodeValid = true;
	let tigerhuntResult = "";

	const validatePosterEmail = () => {
		const result = emailValidator(posterEmail);
		$$invalidate(10, isPosterEmailValid = result === true ? true : false);
		return;
	};

	const validateClassmateEmail = () => {
		const result = emailValidator(contactEmail);
		$$invalidate(12, isContactEmailValid = result === true ? true : false);
		return;
	};

	const validatePosterName = () => {
		const result = nameValidator(posterName);
		$$invalidate(11, isPosterNameValid = result === true ? true : false);
		return;
	};

	const validateClassmateState = () => {
		const result = stateValidator(contactState);
		$$invalidate(13, isContactStateValid = result === true ? true : false);
		return;
	};

	const validateClassmateZipcode = () => {
		const result = zipcodeValidator(contactZipcode);
		$$invalidate(14, isContactZipcodeValid = result === true ? true : false);
		return;
	};

	const handleSubmit = () => {
		if (!isPosterNameValid || !isPosterEmailValid || !isContactEmailValid || !isContactStateValid || !isContactZipcodeValid) {
			return;
		}

		$$invalidate(7, contactZipcode = parseInt(contactZipcode));

		return client(fetch).request({
			query: `
          mutation sendTigerHunt(
            $posterEmail: String!
            $posterName: String!
            $name: String!
            $contactEmail: String
            $contactStreet: String
            $contactCity: String
            $contactState: String
            $contactZipcode: Int
            $contactPhone: String
            $contactInfo: String
            $isContactDeceased: Boolean
            $type: String
          ) {
            sendTigerHunt (
              fromEmail: $posterEmail
              fromName: $posterName
              contactName: $name
              contactEmail: $contactEmail
              contactStreet: $contactStreet
              contactCity: $contactCity
              contactState: $contactState
              contactZipcode: $contactZipcode
              contactPhone: $contactPhone
              isContactDeceased: $isContactDeceased
              contactInfo: $contactInfo
              contactType: $type
            ) {
              result {
                message
                code
              }
            }
          }        
        `,
			variables: {
				posterName,
				posterEmail,
				name,
				contactEmail,
				contactStreet,
				contactCity,
				contactState,
				contactZipcode,
				contactPhone,
				isContactDeceased,
				contactInfo,
				type
			}
		}).then(response => {
			console.log("response: ", response);
			$$invalidate(1, posterEmail = "");
			$$invalidate(0, posterName = "");
			$$invalidate(9, contactInfo = "");
			$$invalidate(4, contactStreet = "");
			$$invalidate(5, contactCity = "");
			$$invalidate(6, contactState = "");
			$$invalidate(7, contactZipcode = "");
			$$invalidate(8, contactPhone = "");
			$$invalidate(3, isContactDeceased = deceased === "TRUE" ? true : false);

			$$invalidate(15, tigerhuntResult = response.sendTigerHunt.result.code === "OK"
			? "Your message was successfully sent!"
			: "An error occurred sending your message. Please try later");

			$$invalidate(10, isPosterEmailValid = true);
			$$invalidate(11, isPosterNameValid = true);
			$$invalidate(12, isContactEmailValid = true);
			$$invalidate(13, isContactStateValid = true);
			$$invalidate(14, isContactZipcodeValid = true);
			return { response };
		});
	};

	const handleBack = async () => {
		await goto(`${back}?back=${back}&firstName=${firstName}&name=${name}&photoId=${cloudinaryId}&deceased=${deceased}&confirmed=${confirmed}&department=${department}&position=${position}`);
	};

	const writable_props = ["params"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Updatecontact> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		posterName = this.value;
		$$invalidate(0, posterName);
	}

	function input1_input_handler() {
		posterEmail = this.value;
		$$invalidate(1, posterEmail);
	}

	function input2_input_handler() {
		contactEmail = this.value;
		$$invalidate(2, contactEmail);
	}

	function input3_input_handler() {
		contactStreet = this.value;
		$$invalidate(4, contactStreet);
	}

	function input4_input_handler() {
		contactCity = this.value;
		$$invalidate(5, contactCity);
	}

	function input5_input_handler() {
		contactState = this.value;
		$$invalidate(6, contactState);
	}

	function input6_input_handler() {
		contactZipcode = this.value;
		$$invalidate(7, contactZipcode);
	}

	function input7_input_handler() {
		contactPhone = this.value;
		$$invalidate(8, contactPhone);
	}

	function input8_change_handler() {
		isContactDeceased = this.checked;
		$$invalidate(3, isContactDeceased);
	}

	function textarea_input_handler() {
		contactInfo = this.value;
		$$invalidate(9, contactInfo);
	}

	$$self.$$set = $$props => {
		if ("params" in $$props) $$invalidate(24, params = $$props.params);
	};

	$$self.$capture_state = () => ({
		preload,
		goto,
		client,
		emailValidator,
		nameValidator,
		stateValidator,
		zipcodeValidator,
		params,
		back,
		firstName,
		name,
		cloudinaryId,
		deceased,
		confirmed,
		type,
		department,
		position,
		posterName,
		posterEmail,
		contactEmail,
		isContactDeceased,
		contactStreet,
		contactCity,
		contactState,
		contactZipcode,
		contactPhone,
		contactInfo,
		isPosterEmailValid,
		isPosterNameValid,
		isContactEmailValid,
		isContactStateValid,
		isContactZipcodeValid,
		tigerhuntResult,
		validatePosterEmail,
		validateClassmateEmail,
		validatePosterName,
		validateClassmateState,
		validateClassmateZipcode,
		handleSubmit,
		handleBack
	});

	$$self.$inject_state = $$props => {
		if ("params" in $$props) $$invalidate(24, params = $$props.params);
		if ("back" in $$props) back = $$props.back;
		if ("firstName" in $$props) firstName = $$props.firstName;
		if ("name" in $$props) $$invalidate(16, name = $$props.name);
		if ("cloudinaryId" in $$props) cloudinaryId = $$props.cloudinaryId;
		if ("deceased" in $$props) deceased = $$props.deceased;
		if ("confirmed" in $$props) confirmed = $$props.confirmed;
		if ("type" in $$props) type = $$props.type;
		if ("department" in $$props) department = $$props.department;
		if ("position" in $$props) position = $$props.position;
		if ("posterName" in $$props) $$invalidate(0, posterName = $$props.posterName);
		if ("posterEmail" in $$props) $$invalidate(1, posterEmail = $$props.posterEmail);
		if ("contactEmail" in $$props) $$invalidate(2, contactEmail = $$props.contactEmail);
		if ("isContactDeceased" in $$props) $$invalidate(3, isContactDeceased = $$props.isContactDeceased);
		if ("contactStreet" in $$props) $$invalidate(4, contactStreet = $$props.contactStreet);
		if ("contactCity" in $$props) $$invalidate(5, contactCity = $$props.contactCity);
		if ("contactState" in $$props) $$invalidate(6, contactState = $$props.contactState);
		if ("contactZipcode" in $$props) $$invalidate(7, contactZipcode = $$props.contactZipcode);
		if ("contactPhone" in $$props) $$invalidate(8, contactPhone = $$props.contactPhone);
		if ("contactInfo" in $$props) $$invalidate(9, contactInfo = $$props.contactInfo);
		if ("isPosterEmailValid" in $$props) $$invalidate(10, isPosterEmailValid = $$props.isPosterEmailValid);
		if ("isPosterNameValid" in $$props) $$invalidate(11, isPosterNameValid = $$props.isPosterNameValid);
		if ("isContactEmailValid" in $$props) $$invalidate(12, isContactEmailValid = $$props.isContactEmailValid);
		if ("isContactStateValid" in $$props) $$invalidate(13, isContactStateValid = $$props.isContactStateValid);
		if ("isContactZipcodeValid" in $$props) $$invalidate(14, isContactZipcodeValid = $$props.isContactZipcodeValid);
		if ("tigerhuntResult" in $$props) $$invalidate(15, tigerhuntResult = $$props.tigerhuntResult);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		posterName,
		posterEmail,
		contactEmail,
		isContactDeceased,
		contactStreet,
		contactCity,
		contactState,
		contactZipcode,
		contactPhone,
		contactInfo,
		isPosterEmailValid,
		isPosterNameValid,
		isContactEmailValid,
		isContactStateValid,
		isContactZipcodeValid,
		tigerhuntResult,
		name,
		validatePosterEmail,
		validateClassmateEmail,
		validatePosterName,
		validateClassmateState,
		validateClassmateZipcode,
		handleSubmit,
		handleBack,
		params,
		input0_input_handler,
		input1_input_handler,
		input2_input_handler,
		input3_input_handler,
		input4_input_handler,
		input5_input_handler,
		input6_input_handler,
		input7_input_handler,
		input8_change_handler,
		textarea_input_handler
	];
}

class Updatecontact extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { params: 24 }, [-1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Updatecontact",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*params*/ ctx[24] === undefined && !("params" in props)) {
			console_1.warn("<Updatecontact> was created without expected prop 'params'");
		}
	}

	get params() {
		throw new Error("<Updatecontact>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set params(value) {
		throw new Error("<Updatecontact>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Updatecontact;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
